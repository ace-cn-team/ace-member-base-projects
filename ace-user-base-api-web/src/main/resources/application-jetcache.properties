# https://github.com/alibaba/jetcache/wiki/Config_CN
#jetcache.statIntervalMinutes	0	统计间隔，0表示不统计
#jetcache.areaInCacheName	true	jetcache-anno把cacheName作为远程缓存key前缀，2.4.3以前的版本总是把areaName加在cacheName中，因此areaName也出现在key前缀中。2.4.4以后可以配置，为了保持远程key兼容默认值为true，但是新项目的话false更合理些。
#jetcache.hiddenPackages	无	@Cached和@CreateCache自动生成name的时候，为了不让name太长，hiddenPackages指定的包名前缀被截掉
#jetcache.[local|remote].${area}.type	无	缓存类型。tair、redis为当前支持的远程缓存；linkedhashmap、caffeine为当前支持的本地缓存类型
#jetcache.[local|remote].${area}.keyConvertor	无	key转换器的全局配置，当前只有一个已经实现的keyConvertor：fastjson。仅当使用@CreateCache且缓存类型为LOCAL时可以指定为none，此时通过equals方法来识别key。方法缓存必须指定keyConvertor
#jetcache.[local|remote].${area}.valueEncoder	java	序列化器的全局配置。仅remote类型的缓存需要指定，可选java和kryo
#jetcache.[local|remote].${area}.valueDecoder	java	序列化器的全局配置。仅remote类型的缓存需要指定，可选java和kryo
#jetcache.[local|remote].${area}.limit	100	每个缓存实例的最大元素的全局配置，仅local类型的缓存需要指定。注意是每个缓存实例的限制，而不是全部，比如这里指定100，然后用@CreateCache创建了两个缓存实例（并且注解上没有设置localLimit属性），那么每个缓存实例的限制都是100
#jetcache.[local|remote].${area}.expireAfterWriteInMillis	无穷大	以毫秒为单位指定超时时间的全局配置(以前为defaultExpireInMillis)
#jetcache.local.${area}.expireAfterAccessInMillis	0	需要jetcache2.2以上，以毫秒为单位，指定多长时间没有访问，就让缓存失效，当前只有本地缓存支持。0表示不使用这个功能。

jetcache.statIntervalMinutes=0
jetcache.areaInCacheName=false
#jetcache.hiddenPackages=
jetcache.local.default.type=caffeine
jetcache.local.default.keyConvertor=fastjson
jetcache.local.default.valueEncoder=kryo
jetcache.local.default.valueDecoder=kryo
jetcache.local.default.limit=100
jetcache.local.default.expireAfterAccessInMillis=0

jetcache.remote.default.type=redis.redisson
jetcache.remote.default.keyConvertor=fastjson
jetcache.remote.default.valueEncoder=kryo
jetcache.remote.default.valueDecoder=kryo
#jetcache.[local|remote].${area}.expireAfterWriteInMillis 无穷大	以毫秒为单位指定超时时间的全局配置(以前为defaultExpireInMillis)
